Chapter 1.8 Loose Ends

this talks about concepts that havent been talked about in brief

we learned "if" and "for" but not switch. this is a basic switch control flow:

switch coinflip() {
    case "heads":
        heads++
    case "tails":
        tails++
    default:
        fmt.PrintLn("landed on an edge!")
}

cases are evaluated top to bottom. default case is optional but recommended. a switch does not need an operand it just lists the cases and does a boolean evaluation.

there is also this:

func Signum(x int) int {
    switch {
    case x > 0:
        return +1
    default:
        return 0
    case x < 0:
        return -1
    }
}

this is a tagless switch which is just switch true.

a "break" in a switch control flow just causes the control to go to the next statement.
a "continue" in a for control flow just causes the loop to go to its next iteration.


named types also hasnt been talked about much. this is an example:

type Point struct {
    X, Y int
}
var p Point

pointers also arent talked about much.

pointers are just variables that contain the address of a variable.

&var -> address of a variable
*var -> value that the pointer refers to

methods and interfaces arent talked about much

"A method is a function associated with a named type"
"Interfaces are abstract types that let us treat different concrete types in the same way based on what methods they have"

more packages arent talked about as well. the book will go over more and more standard packages