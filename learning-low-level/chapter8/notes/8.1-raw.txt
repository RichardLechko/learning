Chapter 8.1 Arrays

"an array is an aggregate data type whose members (elements) are all of the same type."

you access an array generally passing an integer into an array like array[5]

"The base address of an array is the address of its first element that occupies the lowest memory location."

Chapter 8.1.1 Array Declarations

how to declare an array

Chapter 8.1.1.1 Declaring Arrays in C, C++, and Java

"data_type array_name [ number_of_elements ];"
char CharArray[ 128 ];
int intArray[ 8 ];
unsigned char ByteArray[ 10 ];
int *PtrArray[ 4 ];

if the array is a:
local variable -> "C/C++ initializes them with whatever bit patterns happen to exist in memory."
static objects -> "C/C++ initializes each array element with 0."

if you want to initialize an array in C/C++:

data_type array_name[ number_of_elements ] = { element_list };

int intArray[8] = {0,1,2,3,4,5,6,7};

these values get stored "in the object code file" and the "operating system will load these values into the memory locations".

Chapter 8.1.1.2 Declaring Arrays in HLA

I dont care

Chapter 8.1.1.3 Declaring Arrays in Pascal/Delphi

I dont care even more

Chapter 8.1.1.4 Declaring Arrays in Swift

I dont care

Chapter 8.1.1.5 Declaring Arrays with Noninteger Index Values

this is not practical and I would never do this. dont care

Chapter 8.1.2 Array Representation in Memory

"an array is a collection of variables that you access using an index."